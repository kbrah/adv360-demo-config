#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_adv360.h"


#define ___ &trans

#define QWERTY 0
#define NO_HMR 1
#define COLEMAK 2
#define DVORAK 3
#define KEYPAD 4
#define FN 5
#define MOD 6
#define NAV 7

#include "combos.dtsi"
/* definitions for mouse layer */
#include "mouse.dtsi"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

/* left-hand HRMs */
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    global-quick-tap-ms = <150>;         // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // requires PR #1423
)

/* right-hand HRMs */
ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    global-quick-tap-ms = <150>;         // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // requires PR #1423
)

#define QUICK_TAP_MS 175

ZMK_BEHAVIOR(num_dance, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&num_word>, <&sl KEYPAD>;  // might want to reverse if rarely using more than 1 digit
)
ZMK_BEHAVIOR(num_layer_word, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&num_dance>;
)

ZMK_BEHAVIOR(nav_layer, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&kp ESC>, <&sl NAV>;
)

ZMK_BEHAVIOR(toggle_qwerty_hmr, macro,
    bindings = <&to QWERTY>, <&num_dance>;
)

#define NUM_WORD &num_layer_word KEYPAD 0
/ {
    /* remove unused keys from layout and move thumb cluster to bottom */
    chosen {
        zmk,matrix_transform = &urobs_transform;
    };
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
                &kp EQUAL &kp N1       &kp N2       &kp N3        &kp N4        &kp N5    &tog KEYPAD    &mo MOD   &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
                &kp TAB   &kp Q        &kp W        &kp E         &kp R         &kp T     &to NO_HMR    &none   &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
                &nav_layer   &hml LGUI A  &hml LALT S  &hml LCTRL D  &kp F         &kp G     &to COLEMAK    &to DVORAK &kp H    &kp J     &hmr LCTRL K     &hmr LALT L     &hmr LGUI SEMI  &kp SQT
                &kp LSHFT &kp Z        &kp X        &kp C         &kp V         &kp B                              &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT
                &kp LCTRL &kp GRAVE    NUM_WORD     &kp LEFT      &kp RIGHT                                                  &kp UP    &kp DOWN  &kp LBKT  &kp RBKT  &mo FN
                                                                              &kp DEL   &kp LALT         &kp LGUI  &kp RCTRL
                                                                    &kp BSPC  &kp LGUI  &kp HOME         &kp PG_UP &kp ENTER &kp SPACE
                                                                                        &kp END          &kp PG_DN
            >;
        };

        base_layer_no_hmr {
            bindings = <
                ---   &kp N1       &kp N2       &kp N3        &kp N4        &kp N5    &tog KEYPAD    &mo MOD    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
                ---   &kp Q        &kp W        &kp E         &kp R         &kp T     &to QWERTY     &none      &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
                ---   &kp A        &kp S        &kp D         &kp F         &kp G     &to COLEMAK    &to DVORAK &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
                ---   &kp Z        &kp X        &kp C         &kp V         &kp B                              &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT
                ---   &kp GRAVE    NUM_WORD     &kp LEFT      &kp RIGHT                                                  &kp UP    &kp DOWN  &kp LBKT  &kp RBKT  &mo FN
                                                                                          --- ---         --- ---
                                                                                      --- --- ---         --- --- ---
                                                                                              ---         ---
            >;
        };

        colemak_layer {
            bindings = <
                ___       ___           ___         ___             ___       ___       ___            ___       ___            ___      ___            ___         ___           ___
                ___       &kp Q         &kp W       &kp F           &kp P     &kp B     ___            ___       &kp J          &kp L    &kp U          &kp Y       &kp SQT       &kp BSLH
                ___       &hml LGUI A   &hml LALT R &hml LCTRL S    &kp T     &kp G     ___            ___       &kp M          &kp N    &hmr LCTRL E   &hmr LALT I &hmr LGUI O   &kp FSLH
                ___       &kp Z         &kp X       &kp C           &kp D     &kp V                              &kp K          &kp H    &kp COMMA      &kp DOT     &kp SEMI      ___
                ___       ___           ___         ___             ___                                                         ___      ___            ___         ___           ___
                                                                  ___       ___            ___       ___
                                                        ___       ___       ___            ___       ___       ___
                                                                            ___            ___
            >;
        };
        dvorak_layer {
            bindings = <
                ___       ___       ___       ___       ___       ___       ___            ___       ___       ___       ___       ___       ___       ___
                ___       &kp SQT     &kp COMMA     &kp DOT     &kp P     &kp Y     ___            ___       &kp F     &kp G     &kp C     &kp R     &kp L   &kp BSLH
                ___       &hml LGUI A     &hml LALT O     &hml LCTRL E     &kp U     &kp I     ___            ___       &kp D     &kp H     &hmr LCTRL T     &hmr LALT N     &hmr LGUI S     &kp FSLH
                ___       &kp SEMI     &kp Q     &kp J     &kp K     &kp X                              &kp B     &kp M     &kp W &kp V   &kp Z  ___
                ___       ___       ___       ___       ___                                                    ___       ___       ___       ___       ___
                                                                  ___       ___            ___       ___
                                                        ___       ___       ___            ___       ___       ___
                                                                            ___            ___
            >;
        };

        keypad {
            bindings = <
                ___       ___       ___       ___       ___       ___       ___            ___       ___       &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY ___
                ___       ___       &kp N7    &kp N8    &kp N9    ___       ___            ___       ___       &kp N7    &kp N8    &kp N9  &kp KP_MINUS    ___
                ___       ___       &kp N4    &kp N5    &kp N6    ___       ___            ___       ___       &kp N4    &kp N5    &kp N6  &kp KP_PLUS     ___
                ___       &kp N0    &kp N1    &kp N2    &kp N3       ___                             &kp N0    &kp N1    &kp N2    &kp N3  &kp KP_ENTER    ___
                ___       ___       ___       ___       ___                                                    ___       ___       &kp KP_DOT    ___       ___
                                                                  ___       ___            ___       ___
                                                        ___       ___       ___            ___       ___       ___
                                                                            ___            ___
            >;
        };

        fn {
            bindings = <
                &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    ___            ___       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                ___       ___       ___       ___       ___       ___       ___            ___       ___       ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___       ___       ___            ___       ___       ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___       ___                                ___       ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___                                                    ___       ___       ___       ___       ___
                                                                  ___       ___            ___       ___
                                                        ___       ___       ___            ___       ___       ___
                                                                            ___            ___
            >;
        };

        mod {
            bindings = <
                ___       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 ___              ___         &bt BT_SEL 0 &bt BT_SEL 1     &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 ___
                ___       ___          ___          ___          ___          ___          &bootloader      &bootloader ___          ___              ___          ___          ___          ___
                ___       ___          ___          ___          ___          ___          ___              ___         ___          ___              ___          ___          ___          ___
                ___       ___          ___          ___          ___          ___                                       ___          ___              ___          ___          ___          ___
                ___       ___          ___          &bl BL_INC   &bl BL_DEC                                                          &bl BL_INC       &bl BL_DEC   ___          ___          ___
                                                                              &bt BT_CLR   &bt BT_CLR       &bt BT_CLR  &bt BT_CLR
                                                                 &rgb_ug RGB_TOG &bl BL_TOG   ___              ___         &bl BL_TOG   &rgb_ug RGB_TOG
                                                                                           ___              ___
            >;
        };

        nav {
            bindings = <
                &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    ___            ___       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                ___       ___       ___       ___       ___       ___       ___            ___       ___       ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___       ___       ___            ___       LEFT       DOWN     UP        RIGHT       ___       ___
                ___       ___       ___       ___       ___       ___                                ___       ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___                                                    ___       ___       ___       ___       ___
                                                                  ___       ___            ___       ___
                                                        ___       ___       ___            ___       ___       ___
                                                                            ___            ___
            >;
        };

    };

};

